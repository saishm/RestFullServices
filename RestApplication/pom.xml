<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ie.template.services</groupId>
	<artifactId>RestApplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>RestWeb</module>
		<module>RestCore</module>
		<module>RestClient</module>
		<module>RestEAR</module>
	</modules>
	<properties>
		<java-version>1.6</java-version>
		<org.springframework-version>3.1.1.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<maven-surefire-plugin-version>2.19</maven-surefire-plugin-version>
		<maven-failsafe-plugin-version>2.19</maven-failsafe-plugin-version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework-version}</version>
				<exclusions>
					<!-- Exclude Commons Logging in favor of SLF4j -->
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework-version}</version>
			</dependency>

			<!-- AspectJ -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${org.aspectj-version}</version>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j-version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${org.slf4j-version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${org.slf4j-version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.15</version>
				<exclusions>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
				</exclusions>
				<scope>runtime</scope>
			</dependency>

			<!-- @Inject -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>

			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>

			<!-- Test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit_version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${org.hamcrest-version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>

				<!-- <plugin>
					<dependency>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin-version}</version>
					</dependency>
				</plugin>
				<plugin>
					<dependency>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin-version}</version>
						<type>maven-plugin</type>
					</dependency>
				</plugin> -->


							<plugin>
				    <groupId>org.jacoco</groupId>
				    <artifactId>jacoco-maven-plugin</artifactId>
				    <version>0.7.5.201505241946</version>
				    <executions>
				        <!--
				            Prepares the property pointing to the JaCoCo runtime agent which
				            is passed as VM argument when Maven the Surefire plugin is executed.
				        -->
				        <execution>
				            <id>prepare-unit-test</id>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <!-- <destFile>${project.basedir}/../target/coverage-reports/jacoco-ut.exec</destFile> -->
				                <destFile>C:/Users/Manoj/Documents/Study/gitSource/RestFullServices/RestApplication/target/coverage-reports/jacoco-ut.exec</destFile>
				                <!--
				                    Sets the name of the property containing the settings
				                    for JaCoCo runtime agent.
				                -->
				                <propertyName>unitCoverageAgent</propertyName>
				            </configuration>
				        </execution>
				        
				         <execution>
				            <id>pre-integration-test</id>
				            <phase>pre-integration-test</phase>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				            <configuration>
				                <destFile>C:/Users/Manoj/Documents/Study/gitSource/RestFullServices/RestApplication/target/coverage-reports/jacoco-it.exec</destFile>
				                <propertyName>itCoverageAgent</propertyName>
				            </configuration>
				        </execution>
				        <!--
				            Ensures that the code coverage report for unit tests is created after
				            unit tests have been run.
				        -->
				        <execution>
				            <id>post-test</id>
				            <phase>test</phase>
				            <goals>
				                <goal>report</goal>
				            </goals>
				        </execution>
				    </executions>
				</plugin>
				
			</plugins>
		</pluginManagement>
		
		<plugins>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>